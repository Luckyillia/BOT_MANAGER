const func = require('./func');

function start(ctx) {
  const chatId = ctx.chat.id;
  const userId = ctx.from.id;
  const firstName = ctx.from.first_name || '';
  const lastName = ctx.from.last_name || '';

  func.addUserIfNotExists(chatId, ctx);
  ctx.reply(`üëã –ü—Ä–∏–≤–µ—Ç, ${firstName} ${lastName}! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –≥—Ä—É–ø–ø–æ–π.`);
  func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞–ø—É—Å—Ç–∏–ª –∫–æ–º–∞–Ω–¥—É /start –≤ —á–∞—Ç–µ ${chatId}`, 'command');
  func.incrementUserMessage(chatId, userId);
}

function setNick(ctx) {
  if (!func.isGroupChat(ctx)) {
    func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /setnick –Ω–µ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ`, 'error');
    return ctx.reply('‚ö†Ô∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö.');
  }

  const newNick = ctx.message.text.split(' ')[1];

  if (!newNick) {
    func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –Ω–µ —É–∫–∞–∑–∞–ª –Ω–∏–∫ –≤ –∫–æ–º–∞–Ω–¥–µ /setnick`, 'error');
    return ctx.reply('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫. –ü—Ä–∏–º–µ—Ä: /setnick –í–∞—à–ù–∏–∫');
  }

  if (newNick.length > 20) {
    func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} —É–∫–∞–∑–∞–ª —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –Ω–∏–∫: ${newNick}`, 'error');
    return ctx.reply('‚ö†Ô∏è –ù–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤.');
  }

  const chatId = ctx.chat.id;
  const userId = ctx.from.id;

  const data = func.loadData();

  if (data.chats[chatId] && data.chats[chatId].users[userId]) {
    data.chats[chatId].users[userId].customNick = newNick;
    func.saveData(data);
    ctx.reply(`‚úÖ –í–∞—à –Ω–æ–≤—ã–π –Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${newNick}`);
    func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∏–∑–º–µ–Ω–∏–ª –Ω–∏–∫ –Ω–∞ ${newNick} –≤ —á–∞—Ç–µ ${chatId}`, 'command');
  } else {
    func.addUserIfNotExists(chatId, ctx, newNick);
    ctx.reply(`‚úÖ –í–∞—à –Ω–æ–≤—ã–π –Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${newNick}`);
    func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –¥–æ–±–∞–≤–ª–µ–Ω —Å –Ω–∏–∫–æ–º ${newNick} –≤ —á–∞—Ç ${chatId}`, 'command');
  }
  func.incrementUserMessage(chatId, userId);
}

function myNick(ctx) {
  const chatId = ctx.chat.id;
  const userId = ctx.from.id;

  const data = func.loadData();
  const user = data.chats[chatId]?.users[userId];

  if (user) {
    const nick = user.customNick || '‚ùå –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –Ω–∏–∫–∞.';
    ctx.reply(`üë§ –í–∞—à –Ω–∏–∫: ${nick}`);
    func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–≤–æ–π –Ω–∏–∫ –≤ —á–∞—Ç–µ ${chatId}`, 'command');
  } else {
    ctx.reply('‚ö†Ô∏è –í—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');
    func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–∞ ${chatId}`, 'error');
  }
  func.incrementUserMessage(chatId, userId);
}

function listNick(ctx){
  const chatId = ctx.chat.id;
  const userId = ctx.from.id;
  const data = func.loadData();
  const users = data.chats[chatId]?.users;

  if (users) {
    const nicks = Object.values(users)
      .map(user => `${user.firstName} ${user.lastName || ''}: ${user.customNick || '‚ùå –ù–µ—Ç –Ω–∏–∫–∞'}`)
      .join('\n');

    const message = nicks || '‚ö†Ô∏è –í —ç—Ç–æ–º —á–∞—Ç–µ –µ—â–µ –Ω–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∫–æ–≤.';
    ctx.reply(message);
    func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø–∏—Å–æ–∫ –Ω–∏–∫–æ–≤ –≤ —á–∞—Ç–µ ${chatId}`, 'command');
  } else {
    ctx.reply('‚ö†Ô∏è –í —ç—Ç–æ–º —á–∞—Ç–µ –µ—â–µ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');
    func.log(`–í —á–∞—Ç–µ ${chatId} –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`, 'error');
  }
  func.incrementUserMessage(chatId, userId);
}

function resetNick(ctx) {
  const chatId = ctx.chat.id;
  const userId = ctx.from.id;

  const data = func.loadData();

  if (data.chats[chatId] && data.chats[chatId].users[userId]) {
    data.chats[chatId].users[userId].customNick = '';
    func.saveData(data);
    ctx.reply('‚úÖ –í–∞—à –Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω.');
    func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —Å–±—Ä–æ—Å–∏–ª –Ω–∏–∫ –≤ —á–∞—Ç–µ ${chatId}`, 'command');
  } else {
    ctx.reply('‚ö†Ô∏è –í—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');
    func.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–∞ ${chatId}`, 'error');
  }
  func.incrementUserMessage(chatId, userId);
}
module.exports = {
  start,
  setNick,
  myNick,
  listNick,
  resetNick
}